import java.util.*;

terminal			SEMI;
terminal			OPENP;
terminal			CLOSEP;
terminal			OPENB;
terminal			CLOSEB;
terminal			COMMA;
terminal			AMPERSAND;
terminal			NOT;
terminal			OR;

terminal			RETURN;

terminal			IF;
terminal			ELSEIF;
terminal			ELSE;
terminal			WHILE;

terminal			IN;
terminal			OUT;
terminal			INSIGN;
terminal			OUTSIGN;
terminal			ASSIGN;

terminal			STRUCT;
terminal			PERIOD;

terminal String			TYPE;
terminal String			MULOP;
terminal String			ADDOP;
terminal String			RELOP;
terminal String			EQOP;

terminal Integer		INT;
terminal Character		CHAR;
terminal Boolean		BOOL;
terminal String			ID;

non terminal			SL;
non terminal			field_list, field_defn; // structures
non terminal			var_decln, vars, struct_var_decln, struct_vars;
non terminal			structure;
non terminal 			components, element;
non terminal			expr; // expressions
non terminal			procedure, procedure_call; // procedures
non terminal			body, body_part; // body of procedures
non terminal			param_list, param, var_list, var, list_var;
non terminal			input, output;
non terminal			assign, while;
non terminal			if, elseif, elseif_else, else; // conditionals
non terminal			list_struct, list_proc, content;

precedence left OR;
precedence left AMPERSAND;
precedence left EQOP;
precedence left RELOP;
precedence left ADDOP;
precedence left MULOP;
precedence left NOT; 
precedence right PERIOD;

SL ::= list_struct list_proc | list_proc;

struct_var_decln		::= 	TYPE ID | ID ID;
//struct_vars			::=	COMMA ID struct_vars | COMMA ID;

list_var			::=	list_var var_decln SEMI | var_decln SEMI;

list_struct			::=	list_struct structure | structure;

list_proc			::=	list_proc procedure | procedure;

var_decln			::=	TYPE ID vars | TYPE ID;
vars				::=	COMMA ID vars | COMMA ID;

structure			::=	STRUCT ID OPENB field_list CLOSEB
				| 	STRUCT OPENB field_list CLOSEB ID SEMI;

field_list			::=	field_list field_defn | field_defn;
field_defn			::=	struct_var_decln SEMI | structure;

expr				::=	expr OR expr
				|	expr AMPERSAND expr
				|	expr EQOP expr
				|	expr RELOP expr
				|	expr ADDOP expr
				|	expr MULOP expr
				|	NOT expr
				|	expr PERIOD expr
				|	ID | CHAR | INT | BOOL;

content				::=	list_var body | body | list_var;

body				::= 	body body_part
				|	body_part;

body_part			::=	structure
				|	expr SEMI
				|	input SEMI
				|	output SEMI
				|	assign SEMI
				|	while SEMI
				|	procedure
				|	procedure_call SEMI
				|	if SEMI
				|	RETURN SEMI;

param_list			::=	param_list COMMA param | param;

param				::=	TYPE ID | TYPE AMPERSAND ID | ID ID | ID AMPERSAND ID;

procedure			::=	ID OPENP param_list CLOSEP OPENB content CLOSEB
				|	ID OPENP CLOSEP OPENB content CLOSEB;

input				::=	IN INSIGN expr;

output				::=	OUT OUTSIGN expr;

assign				::=	expr ASSIGN expr;

while				::=	WHILE expr OPENB body CLOSEB;

if				::=	IF expr OPENB body CLOSEB elseif_else;
elseif				::=	elseif ELSEIF expr OPENB body CLOSEB | ELSEIF expr OPENB body CLOSEB;
elseif_else			::=	elseif else | else;
else				::=	ELSE OPENB body CLOSEB | ;

procedure_call			::=	ID OPENP var_list CLOSEP
				|	ID OPENP CLOSEP;

var_list			::=	var_list COMMA expr | expr;
