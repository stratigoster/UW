.globl main
main:
	addi	$1, $0, 0	# Load false
	sw	$1, -16($30)	# saving variable
	addi	$1, $0, 1	# Load true
	sw	$1, -12($30)	# saving variable
				# if #1
	lw	$1, -16($30)	# load bool variable
	blez	$1, _E1
	lw	$1, -12($30)	# load bool variable
	sw	$1, -16($30)	# saving variable
	j	_L1
_E1:				# elseif #1
			addi	$1, $0, 1	# Load true
	blez	$1, _E2
	lw	$1, -16($30)	# load bool variable
	sw	$1, -12($30)	# saving variable
	j	_L1
_E2:				# else
	lw	$1, -12($30)	# load bool variable
	sw	$1, -16($30)	# saving variable
_L1:
				# if #4
	lw	$1, -12($30)	# load bool variable
	blez	$1, _E5
	addi	$1, $0, 1	# Load true
	bne	$0, $1, _E3	# if 'true', skip
	addi	$4, $0, 102	# print 'f'
	trap	101			
	addi	$4, $0, 97	# print 'a'
	trap	101			
	addi	$4, $0, 108	# print 'l'
	trap	101			
	addi	$4, $0, 115	# print 's'
	trap	101			
	addi	$4, $0, 101	# print 'e'
	trap	101			
	j	_L2
_E3:
	addi	$4, $0, 116	# print 't'
	trap	101			
	addi	$4, $0, 114	# print 'r'
	trap	101			
	addi	$4, $0, 117	# print 'u'
	trap	101			
	addi	$4, $0, 101	# print 'e'
	trap	101			
_L2:
	j	_L4
_E5:				# else
	lw	$1, -16($30)	# load bool variable
	bne	$0, $1, _E4	# if 'true', skip
	addi	$4, $0, 102	# print 'f'
	trap	101			
	addi	$4, $0, 97	# print 'a'
	trap	101			
	addi	$4, $0, 108	# print 'l'
	trap	101			
	addi	$4, $0, 115	# print 's'
	trap	101			
	addi	$4, $0, 101	# print 'e'
	trap	101			
	j	_L3
_E4:
	addi	$4, $0, 116	# print 't'
	trap	101			
	addi	$4, $0, 114	# print 'r'
	trap	101			
	addi	$4, $0, 117	# print 'u'
	trap	101			
	addi	$4, $0, 101	# print 'e'
	trap	101			
_L3:
	addi	$1, $0, 10	# Load ASCII value
	add	$4, $1, $0	# printing char
	trap	101
_L4:
	trap	10		# Quit
