

#!/usr/bin/env python
import math
def _forwardGen(seq):
	for i in seq:
		yield { 'all':i }
def _reverseGen(seq):
	i = len(seq)
	while i>0:
		i = i - 1
		yield { 'all':seq[i] }
class _dummy_(Exception):pass
class _numeric_error(Exception):pass
class _constraint_error(Exception):pass
class main:
	try:
		hi = { 'all':{'all':0} }
		p = { 'all':{'all':0} }
		i = { 'all':hi['all']['all']['all']['a'] }
		j = { 'all':p['all']['all']['a'] }
		l = { 'all':p['all']['all']['p']['all']['p']['all']['p']['all']['p']['all']['p']['all']['p']['all'] }
		k = { 'all':hi['all']['all']['all']['blah']['all']['all'] }
		q = { 'all':p['all'] }
		r = { 'all':p['all']['all'] }
		boo = { 'all':{'all':0} }
		hoo = { 'all':boo['all']['all'] }
		def __init__(self):
			try:
				pass
				pass
			except _dummy_:
				pass
	except _dummy_:
		pass
main()
